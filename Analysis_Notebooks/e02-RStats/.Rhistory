source('full_model.r')
whos
anova(model1, model2)
model3 <- lmer('MeanSync ~ Seizure_ID + (Seizure_ID | Subject_ID / Event_ID)', data=dat, REML=FALSE)
model3 <- lmer('MeanSync ~ Seizure_ID + (Event_ID | Subject_ID / Event_ID)', data=dat, REML=FALSE)
q()
q()
q()
source('full_model.r')
q()
clear
clear()
clr()
clr
source('full_model.r')
q()
source('full_model.r')
q()
source('full_model.r')
q()
source('full_model.r')
q()
source('full_model.r')
q()
source('full_model.r')
q
q()
q
source('full_model.r')
q()
source('full_model.r')
q()
source('full_model.r')
q()
source('full_model.r')
q()
source('full_model.r')
update.packages()
model2_3_4_x
coef(model2_3_4_x)
ggplot
library(lsmeans)
install.packages('lsmeans')
utils
q()
library(lsmeans)
source('full_model.r')
library(lsmeans)
lsmeans(model2_3_4_x, pairwise ~ Band_ID | Div_ID)
lsmeans::
library('lsmeans')
lsmeans::
lsmeans(model2_3_4_x, pairwise ~ Band_ID | Div_ID)
import('lsmeans')
glht
lmer
q()
source('full_model.r')
lmeans
lsmeans
library(multcomp)
install.packages("multcomp", repos="http://R-Forge.R-project.org")
lsmeans
q()
q()
require(lsmeans)
install.packages(lmerTest)
install.packages('lmerTest')
options(menu.graphics=FALSE)
install.packages('lmerTest')
library(lmerTest)
install.packages("lmerTest", repos="http://R-Forge.R-project.org")
install.packages("Hmisc", repos="http://R-Forge.R-project.org")
q()
install.packages('lmerTest')
install.packages('lmerTest')
library(multcomp)
q()
library(multcomp)
q()
source('model_sync_seizure.r')
q()
source('model_sync_seizure.r')
q()
source('model_sync_degreedistr.r')
q()
source('model_sync_degreedistr.r')
q()
source('model_sync_degreedistr.r')
q()
source('model_sync_degreedistr.r')
q()
source('model_sync_seizure.r.r')
source('model_sync_seizure.r')
q()
source('model_sync_seizure.r')
q()
source('model_sync_seizure.r')
q()
source('model_sync_seizure.r')
q()
source('model_sync_seizure.r')
q()
source('model_sync_seizure.r')
q()
source('model_sync_seizure.r')
q()
source('model_sync_seizure.r')
q()
source('model_sync_seizure.r')
q()
source('model_sync_seizure.r')
q()
source('model_sync_seizure.r')
q()
aov
q()
q()
source('model_sync_seizure.r')
q()
source('model_sync_seizure.r')
dat_sel
dat
q()
source('model_sync_seizure.r')
q()
  9 dat <- read.csv('/data/jag/akhambhati/hoth_research/PeriphData/ds-VCR_PushPull/e02-Synchronizability/Population.csv')
 10 dat <- within(dat, {
 11                 Band_ID <- factor(Band_ID)
 12                 Event_ID <- factor(Event_ID)
 13                 Seizure_ID <- factor(Seizure_ID)
 14                 Subject_ID <- factor(Subject_ID)
 15                 })
dat <- read.csv('/data/jag/akhambhati/hoth_research/PeriphData/ds-VCR_PushPull/e02-Synchronizability/Population.csv')
dat <- within(dat, {
               Band_ID <- factor(Band_ID)
               Event_ID <- factor(Event_ID)
               Seizure_ID <- factor(Seizure_ID)
               Subject_ID <- factor(Subject_ID)
                })
dat
dat
dat_band <- dat[dat$Band_ID == 'LowGamma',]
dat_sel <- dat_band[dat_band$Div_ID < 0,]
dat_sel
aov('MeanSync ~ Seizure_ID + Error(Subject_ID/Seizure_ID)', data=dat_sel)
aov('MeanSync ~ Seizure_ID + Error(Subject_ID/Seizure_ID)', data=dat_band)
stack(dat)
stack(dat_sel)
as.data.frame(dat_sel)
aov('MeanSync ~ Seizure_ID + Error(Subject_ID/Seizure_ID)', data=as.data.frame(dat_sel))
aov('MeanSync ~ Seizure_ID + Error(Subject_ID/Seizure_ID)', data=data.frame(dat_sel))
aov('MeanSync ~ Seizure_ID + Error(Subject_ID/Seizure_ID)', data=list(dat_sel))
as.list(dat_sel)
aov('MeanSync ~ Seizure_ID + Error(Subject_ID/Seizure_ID)', data=list(dat_sel))
traceback
q()
source('model_sync_seizure.r')
q()
source('model_sync_seizure.r')
source('model_sync_degreedistr.r')
q()
source('model_sync_degreedistr.r')
q()
source('model_sync_degreedistr.r')
q()
source('model_sync_degreedistr.r')
q()
source('model_sync_degreedistr.r')
q()
clear
source('model_sync_degreedistr.r')
q()
source('model_sync_degreedistr.r')
q()
source('model_sync_degreedistr.r')
q()
source('model_sync_degreedistr.r')
q()
source('model_sync_degreedistr.r')
q()
source('model_sync_degreedistr.r')
q()
source('model_sync_degreedistr.r')
q()
source('model_sync_degreedistr.r')
q()
source('model_sync_degreedistr.r')
q()
source('model_sync_degreedistr.r')
install.packages('Hmisc')
options(menu.graphics=FALSE
)
install.packages('Hmisc')
install.packages('Hmisc')
q()
source('model_sync_degreedistr.r')
q()
source('model_sync_degreedistr.r')
q()
source('model_sync_seizure.r')
q()
source('model_sync_seizure.r')
q()
source('model_sync_seizure.r')
q()
source('model_sync_seizure.r')
q()
q()
source('model_sync_seizure.r')
q()
source('model_sync_seizure.r')
q()
dat <- read.csv('/data/jag/akhambhati/hoth_research/PeriphData/ds-VCR_PushPull/e02-Synchronizability/Population.csv')
dat
dat
levels(dat)
colnames(dat)
dat <- read.csv('/data/jag/akhambhati/hoth_research/PeriphData/ds-VCR_PushPull/e02-Synchronizability/Population_epoch.csv')
colnames(data)
colnames(dat)
dat2 <- aggregate(dat$MeanSync, list(Band_ID=dat$Band_ID, Epoch_ID=dat$Epoch_ID, Event_ID=dat$Event_ID, Seizure_ID=dat$Seizure_ID, Subject_ID=dat$Subject_ID), mean)
dat2
dat2 <- aggregate(dat$MeanSync, list(Band_ID=dat$Band_ID, Epoch_ID=dat$Epoch_ID, Event_ID=dat$Event_ID, Seizure_ID=dat$Seizure_ID, Subject_ID=dat$Subject_ID), mean)q
q
q()
dat <- read.csv('/data/jag/akhambhati/hoth_research/PeriphData/ds-VCR_PushPull/e02-Synchronizability/Population_epoch.csv')
dat2 <- aggregate(dat$MeanSync, frame(Band_ID=dat$Band_ID, Epoch_ID=dat$Epoch_ID, Event_ID=dat$Event_ID, Seizure_ID=dat$Seizure_ID, Subject_ID=dat$Subject_ID), mean)
dat2 <- aggregate(dat$MeanSync, data.frame(Band_ID=dat$Band_ID, Epoch_ID=dat$Epoch_ID, Event_ID=dat$Event_ID, Seizure_ID=dat$Seizure_ID, Subject_ID=dat$Subject_ID), mean)
dat2 <- aggregate(dat$MeanSync, data.frame(Band_ID=dat$Band_ID, Epoch_ID=dat$Epoch_ID, Event_ID=dat$Event_ID, Seizure_ID=dat$Seizure_ID, Subject_ID=dat$Subject_ID), mean)q
q()
source('model_sync_seizure.r')
install.packages('lsmeans')
q()
install.packages('MuMIn')
install.packages('MuMIn', repos='http://cran.us.r-project.org')
install.packages('lsmeans', repos='http://cran.us.r-project.org')
q()
source('model_sync_seizure.r')
install.packages('car')
install.packages('car', repos='http://cran.us.r-project.or')
install.packages('car', repos='http://cran.us.r-project.org')
source('model_sync_seizure.r')
install.packages('pbkrtest', repos='http://cran.us.r-project.org')
install.packages('car', repos='http://cran.us.r-project.org')
q()
source('model_sync_seizure.r')
install.packages('lmer')
install.packages('nlme')
source('model_sync_seizure.r')
install.packages('lsmeans')
install.packages('car')
source('model_sync_seizure.r')
q()
install.packages('car')
library(car)
library(nlme)
library(lsmeans)
library(lme4)
lmer
source('model_sync_seizure.r')
q()
source('model_sync_seizure.r')
q()
install.packages('lme4')
install.packages('lme4')
source('model_sync_seizure.r')
install.packages('lme4', repos='https://cran.r-project.org/')
install.packages('lsmeans', repos='https://cran.r-project.org/')
install.packages('lme4', repos='https://cran.r-project.org/')
install.packages('car', repos='https://cran.r-project.org/')
install.packages('MuMIn', repos='https://cran.r-project.org/')
q()
source('model_sync_seizure.r')
q()
source('model_sync_seizure.r')
remove.packages('lme4')
library(lme4)
q()
library(lme4)
remove.packages('lsmeans')
q()
library(lsmeans)
library(lme4)
install.packages('lme4')
q()
install.packages('lsmeans')
q()
library(lsmeans)
library(lme4)
q()
source('model_sync_seizure.r')
q()
source('model_sync_seizure.r')
q()
remove.packages('lsmeans')
q()
source('model_sync_seizure.r')
q()
source('model_sync_degreedistr.r')
q()
source('model_sync_degreedistr.r')
q()
source('model_sync_degreedistr.r')
q()
source('model_sync_seizure.r.r')
source('model_sync_seizure.r')
q()
source('model_sync_degreedistr.r')
q()
